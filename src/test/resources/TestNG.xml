<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd" >

<!-- <suite name="TestNG"> -->
<suite name="TestNG" parallel="methods" thread-count="1">
    <parameter name="BaseURL" value="https://qa.koel.app/"/>
    <test name="Example Test" preserve-order="false">
        <classes>

            <!--  James Mar | Sprint-09 - 01 | INTERNSHIP-97359  -->

            <!--  User should be navigated to the Homepage after successful login  -->
            <class name="LoginTests"> <methods> <include name="loginAndGoToHomePage"/> </methods> </class>

            <!--  User should be able to navigate to any page in Koel (Current Queue, All Songs, Albums, Artists, Favorites, Recently Played, user's created playlist) after successful login. -->
            <class name="ActionsTest"> <methods> <include name="navigateThroughAllPages"/> </methods> </class>

            <!--  User should be taken to a last visited page (Current Queue, All Songs, Albums, Artists, Favorites, Recently Played, user's created playlist) after logging out and logging in again;  -->
            <class name="LoginTests"> <methods> <include name="loginGoToHomePageGoToFavoritesPageThenLogOutAndLogBackInToLastPageVisited"/> </methods> </class>

            <!--  User should be able to log in with the updated email and the old email should not work  -->
            <class name="ProfileTests"> <methods> <include name="changeCurrentEmailAndTestIfOldOneStillWorks"/> </methods> </class>

            <!--  User should be able to login with the updated password and the old password should not work 'Password is incorrect' message should be displayed  -->
            <class name="LoginTests"> <methods> <include name="loginValidEmailInvalidPassword"/> </methods> </class>

            <!--  User should not be able to login with invalid format email (without @ symbol, dot or domain) and valid password. 'email format is incorrect' message should be displayed  -->
            <class name="LoginTests"> <methods> <include name="loginInvalidEmailFormatNoAtSymbolValidPassword"/> </methods> </class>
            <class name="LoginTests"> <methods> <include name="loginInvalidEmailFormatNoPeriodSymbolValidPassword"/> </methods> </class>
            <class name="LoginTests"> <methods> <include name="loginInvalidEmailFormatNoDomainSymbolValidPassword"/> </methods> </class>

            <!--  User should not be able to login with valid registered email and invalid password. 'Password is incorrect' message should be displayed  -->
            <class name="LoginTests"> <methods> <include name="loginValidEmailInvalidPassword"/> </methods> </class>

            <!--  User should not be able to login with empty 'Email Address' and 'Password fields'  -->
            <class name="LoginTests"> <methods> <include name="loginEmptyEmailEmptyPassword"/> </methods> </class>

            <!--
            <class name="PlayListTests">
                <methods>
                    <include name="deletePlayList"/>
                </methods>
            </class> -->
            <!--
            <class name="HomeTest">
                <methods>
                    <include name="renamePlayList"/>
                </methods>
           </class> -->
            <!--
            <class name="ProfileTests">

            </class>
            -->
            <!-- <class name="CucumberRunner"> -->

            <!--     <methods>
                    <include name="countSongsInPlaylist()"/>
                </methods>  -->

        </classes>
    </test>
</suite>